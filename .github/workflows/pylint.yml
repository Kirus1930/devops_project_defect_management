name: Pylint Code Analysis # Название workflow, отображается в интерфейсе GitHub

# События, которые запускают этот workflow
on:
  push: # Запуск при пуше в ветки, указанные ниже
    branches: [ dev ]
  pull_request: # Запуск при создании или обновлении Pull Request
    branches: [ dev ] # Целевая ветка PR - dev

# Набор задач, которые выполняет workflow
jobs:
  lint: # Идентификатор job
    name: Run Pylint # Человеко-читаемое имя job
    runs-on: ubuntu-latest # Запуск на последней версии Ubuntu

    steps:
      # Шаг 1: Получение кода из репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      # Шаг 2: Настройка Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Укажите нужную версию Python

      # Шаг 3: Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Установите ваши проектные зависимости, если они есть в requirements.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pylint

      # Шаг 4: Запуск Pylint
      - name: Analysing the code with pylint
        run: |
          # Pylint проверит все файлы .py в проекте.
          # '|| true' гарантирует, что шаг не завершится ошибкой, даже если Pylint найдет проблемы.
          # Это нужно, чтобы артефакт с отчетом создался в любом случае.
          pylint $(git ls-files '*.py') --output=pylint-report.txt || true

      # Шаг 5: Загрузка отчета как артефакта
      - name: Upload Pylint report
        uses: actions/upload-artifact@v4
        with:
          name: pylint-report
          path: pylint-report.txt
